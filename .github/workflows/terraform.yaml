name: Terraform Apply

on:
  workflow_dispatch:

jobs:
  terraform:
    name: Terraform apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.6

      - name: Azure Login
        run: az login --service-principal -u ${{ secrets.CLIENT_ID }} -p ${{ secrets.CLIENT_SECRET }} --tenant ${{ secrets.TENANT_ID }}

      - name: Terraform Init
        working-directory: ./scripts/terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./scripts/terraform
        run: terraform apply -auto-approve -var "resource_group_name=${{ vars.AZURE_RESOURCE_NAME }}" -var "location=${{ vars.AZURE_RESOURCE_LOCATION }}" -var "app_name=${{ vars.APP_NAME }}" -var "kubernetes_version=${{ vars.AZURE_AKS_VERSION }}"
        continue-on-error: true

      - name: Install dependencies
        run: |
          sudo apt install gh -y
          sudo apt install jq -y

      - name: GitHub-Cli login
        run: |
          echo "${{ secrets.TOKEN }}" | gh auth login --with-token

      - name: Refresh terraform state
        run: terraform refresh

      - name: Set Secrets
        run: |
          acr_name=$(az acr list | jq -r '.[0].loginServer')
          echo "$acr_name"
          gh secret set CONTAINER_REGISTRY --body "$acr_name"

          az acr credential show --name "$acr_name" --query "{username:username, passwords:passwords[0].value}" --output json > credentials.json
          gh secret set REGISTRY_UN --body "$(cat credentials.json | jq -r '.username')"
          echo "$(cat credentials.json | jq -r '.username')"

          gh secret set REGISTRY_PW --body "$(cat credentials.json | jq -r '.passwords')"
          echo "$(cat credentials.json | jq -r '.passwords')"

          az aks get-credentials --resource-group ${{ vars.AZURE_RESOURCE_NAME }} --name ${{ vars.APP_NAME }}  
          gh secret set KUBE_CONFIG --body "$(cat ~/.kube/config | base64 -w 0)"
          echo "$(cat ~/.kube/config | base64)"